defmodule Scrawly.Repo.Migrations.AddGamesInfrastructure do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    alter table(:users) do
      add :username, :text
      add :score, :bigint, null: false, default: 0
      add :player_state, :text, default: "disconnected"
      add :current_room_id, :uuid
    end

    create table(:rooms, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
    end

    alter table(:users) do
      modify :current_room_id,
             references(:rooms,
               column: :id,
               name: "users_current_room_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:rooms) do
      add :code, :text, null: false
      add :status, :text, null: false, default: "lobby"
      add :max_players, :bigint, null: false, default: 12
      add :current_round, :bigint, null: false, default: 0

      add :created_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create unique_index(:rooms, [:code], name: "rooms_unique_code_index")

    create table(:games, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :status, :text, null: false, default: "in_progress"
      add :current_round, :bigint, null: false, default: 1
      add :total_rounds, :bigint, null: false, default: 5
      add :current_word, :text

      add :current_drawer_id,
          references(:users,
            column: :id,
            name: "games_current_drawer_id_fkey",
            type: :uuid,
            prefix: "public"
          )

      add :created_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :room_id,
          references(:rooms,
            column: :id,
            name: "games_room_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end
  end

  def down do
    drop constraint(:games, "games_current_drawer_id_fkey")

    drop constraint(:games, "games_room_id_fkey")

    drop table(:games)

    drop_if_exists unique_index(:rooms, [:code], name: "rooms_unique_code_index")

    alter table(:rooms) do
      remove :updated_at
      remove :created_at
      remove :current_round
      remove :max_players
      remove :status
      remove :code
    end

    drop constraint(:users, "users_current_room_id_fkey")

    alter table(:users) do
      modify :current_room_id, :uuid
    end

    drop table(:rooms)

    alter table(:users) do
      remove :current_room_id
      remove :player_state
      remove :score
      remove :username
    end
  end
end
